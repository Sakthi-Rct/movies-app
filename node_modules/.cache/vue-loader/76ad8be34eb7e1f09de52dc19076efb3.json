{"remainingRequest":"/Users/sakthivel/Desktop/movies-app/world-movies/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/sakthivel/Desktop/movies-app/world-movies/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/sakthivel/Desktop/movies-app/world-movies/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sakthivel/Desktop/movies-app/world-movies/src/pages/Home.vue?vue&type=template&id=5a90ec03&","dependencies":[{"path":"/Users/sakthivel/Desktop/movies-app/world-movies/src/pages/Home.vue","mtime":1583311184384},{"path":"/Users/sakthivel/Desktop/movies-app/world-movies/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sakthivel/Desktop/movies-app/world-movies/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/sakthivel/Desktop/movies-app/world-movies/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sakthivel/Desktop/movies-app/world-movies/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _vm._m(0),\n    _c(\"div\", { staticClass: \"hero is-light\" }, [\n      _c(\"div\", { staticClass: \"container\" }, [\n        _c(\"div\", { staticClass: \"section relative\" }, [\n          _c(\"form\", { staticClass: \"columns\", on: { submit: _vm.onFilter } }, [\n            _c(\"div\", { staticClass: \"column is-2\" }, [\n              _c(\"div\", { staticClass: \"field\" }, [\n                _c(\"label\", [_vm._v(\"Filter by title\")]),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.filters.Title,\n                      expression: \"filters.Title\"\n                    }\n                  ],\n                  staticClass: \"input\",\n                  attrs: { name: \"filter-by-title\", type: \"text\" },\n                  domProps: { value: _vm.filters.Title },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.filters, \"Title\", $event.target.value)\n                    }\n                  }\n                })\n              ])\n            ]),\n            _c(\"div\", { staticClass: \"column is-2\" }, [\n              _c(\"div\", { staticClass: \"field\" }, [\n                _c(\"label\", [_vm._v(\"Filter by Year\")]),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.filters.Year,\n                      expression: \"filters.Year\"\n                    }\n                  ],\n                  staticClass: \"input\",\n                  attrs: { name: \"filter-by-year\", type: \"text\" },\n                  domProps: { value: _vm.filters.Year },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.filters, \"Year\", $event.target.value)\n                    }\n                  }\n                })\n              ])\n            ]),\n            _c(\"div\", { staticClass: \"column is-2\" }, [\n              _c(\"div\", { staticClass: \"field\" }, [\n                _c(\"label\", [_vm._v(\"Filter by director\")]),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.filters.Director,\n                      expression: \"filters.Director\"\n                    }\n                  ],\n                  staticClass: \"input\",\n                  attrs: { name: \"filter-by-director\", type: \"text\" },\n                  domProps: { value: _vm.filters.Director },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.filters, \"Director\", $event.target.value)\n                    }\n                  }\n                })\n              ])\n            ]),\n            _c(\"div\", { staticClass: \"column is-2\" }, [\n              _c(\"div\", { staticClass: \"field\" }, [\n                _c(\"label\", [_vm._v(\"Filter by Genre\")]),\n                _c(\"br\"),\n                _c(\"div\", { staticClass: \"select is-fullwidth\" }, [\n                  _c(\n                    \"select\",\n                    {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.filters.Genre,\n                          expression: \"filters.Genre\"\n                        }\n                      ],\n                      attrs: { name: \"filter-by-genre\" },\n                      on: {\n                        change: function($event) {\n                          var $$selectedVal = Array.prototype.filter\n                            .call($event.target.options, function(o) {\n                              return o.selected\n                            })\n                            .map(function(o) {\n                              var val = \"_value\" in o ? o._value : o.value\n                              return val\n                            })\n                          _vm.$set(\n                            _vm.filters,\n                            \"Genre\",\n                            $event.target.multiple\n                              ? $$selectedVal\n                              : $$selectedVal[0]\n                          )\n                        }\n                      }\n                    },\n                    [\n                      _c(\"option\", { attrs: { disabled: \"\", value: \"\" } }, [\n                        _vm._v(\"Select one\")\n                      ]),\n                      _vm._l(_vm.GENRES, function(genre, i) {\n                        return _c(\n                          \"option\",\n                          { key: i, domProps: { value: genre.id } },\n                          [_vm._v(_vm._s(genre.name))]\n                        )\n                      })\n                    ],\n                    2\n                  )\n                ])\n              ])\n            ]),\n            _c(\"div\", { staticClass: \"column is-2\" }, [\n              _c(\"div\", { staticClass: \"field\" }, [\n                _c(\"label\", [_vm._v(\"Filter by Language\")]),\n                _c(\"br\"),\n                _c(\"div\", { staticClass: \"select is-fullwidth\" }, [\n                  _c(\n                    \"select\",\n                    {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.filters.Language,\n                          expression: \"filters.Language\"\n                        }\n                      ],\n                      attrs: { name: \"filter-by-language\" },\n                      on: {\n                        change: function($event) {\n                          var $$selectedVal = Array.prototype.filter\n                            .call($event.target.options, function(o) {\n                              return o.selected\n                            })\n                            .map(function(o) {\n                              var val = \"_value\" in o ? o._value : o.value\n                              return val\n                            })\n                          _vm.$set(\n                            _vm.filters,\n                            \"Language\",\n                            $event.target.multiple\n                              ? $$selectedVal\n                              : $$selectedVal[0]\n                          )\n                        }\n                      }\n                    },\n                    [\n                      _c(\"option\", { attrs: { disabled: \"\", value: \"\" } }, [\n                        _vm._v(\"Select one\")\n                      ]),\n                      _vm._l(_vm.LANGUAGES, function(language, i) {\n                        return _c(\n                          \"option\",\n                          { key: i, domProps: { value: language.id } },\n                          [_vm._v(_vm._s(language.name))]\n                        )\n                      })\n                    ],\n                    2\n                  )\n                ])\n              ])\n            ]),\n            _c(\"div\", { staticClass: \"column is-2\" }, [\n              _c(\"label\", [_vm._v(\" \")]),\n              _c(\"div\", { staticClass: \"field table remove-bg\" }, [\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"button is-primary mr1\",\n                    attrs: { name: \"filter\", type: \"submit\" }\n                  },\n                  [_vm._v(\"Filter\")]\n                ),\n                _vm._v(\"\\n               \"),\n                _vm.isFilterApplied\n                  ? _c(\n                      \"a\",\n                      {\n                        staticClass:\n                          \"has-text-grey underline table-cell align-middle h5\",\n                        attrs: { \"data-cy\": \"clear-filter\" },\n                        on: { click: _vm.clearFilter }\n                      },\n                      [_vm._v(\"X Clear filter\")]\n                    )\n                  : _vm._e()\n              ])\n            ])\n          ]),\n          _vm.isFilterApplied && _vm.filteredMoives.length\n            ? _c(\"div\", { staticClass: \"absolute has-text-info\" }, [\n                _vm._v(\n                  \"\\n           Filter result: \" +\n                    _vm._s(_vm.filteredMoives.length) +\n                    \" movie(s) found...\\n          \"\n                )\n              ])\n            : _vm._e()\n        ])\n      ])\n    ]),\n    _c(\"div\", { staticClass: \"container\" }, [\n      _c(\"div\", { staticClass: \"section\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"bricklayer columns\" },\n          [\n            !_vm.filteredMoives.length\n              ? _c(\"p\", [_vm._v(\"\\n          No movies found...\\n        \")])\n              : _vm._e(),\n            _vm._l(_vm.filteredMoives, function(movie, i) {\n              return _c(\n                \"div\",\n                { key: i, staticClass: \"column is-4\" },\n                [_c(\"MovieThumb\", { attrs: { movie: movie } })],\n                1\n              )\n            })\n          ],\n          2\n        )\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"section\", { staticClass: \"hero is-primary\" }, [\n      _c(\"div\", { staticClass: \"hero-body\" }, [\n        _c(\"div\", { staticClass: \"container\" }, [\n          _c(\"h1\", { staticClass: \"title has-text-centered\" }, [\n            _vm._v(\"World Movies\")\n          ])\n        ])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}